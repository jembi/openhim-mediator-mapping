(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{86:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return p})),t.d(n,"metadata",(function(){return i})),t.d(n,"toc",(function(){return s})),t.d(n,"default",(function(){return l}));var a=t(3),o=t(7),r=(t(0),t(91)),p={id:"api",title:"Mapping Mediator API",sidebar_label:"Mapping Mediator API"},i={unversionedId:"gettingStarted/api",id:"gettingStarted/api",isDocsHomePage:!1,title:"Mapping Mediator API",description:"There are two default reserved API paths within the Mapping Mediator. The first is the /uptime path and the second is the /endpoints path.",source:"@site/docs/gettingStarted/api.md",slug:"/gettingStarted/api",permalink:"/openhim-mediator-mapping/docs/gettingStarted/api",editUrl:"https://github.com/jembi/openhim-mediator-mapping/edit/master/docs/docs/gettingStarted/api.md",version:"current",sidebar_label:"Mapping Mediator API",sidebar:"someSidebar",previous:{title:"Endpoints",permalink:"/openhim-mediator-mapping/docs/gettingStarted/endpoints"},next:{title:"Sample Endpoint Schemas",permalink:"/openhim-mediator-mapping/docs/gettingStarted/samples"}},s=[{value:"Uptime",id:"uptime",children:[]},{value:"Endpoints",id:"endpoints",children:[{value:"POST",id:"post",children:[]},{value:"GET",id:"get",children:[]},{value:"PUT",id:"put",children:[]},{value:"DELETE",id:"delete",children:[]}]}],c={toc:s};function l(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"There are two default reserved API paths within the Mapping Mediator. The first is the ",Object(r.b)("inlineCode",{parentName:"p"},"/uptime")," path and the second is the ",Object(r.b)("inlineCode",{parentName:"p"},"/endpoints")," path."),Object(r.b)("h2",{id:"uptime"},"Uptime"),Object(r.b)("p",null,"Uptime only accepts GET requests. i.e:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"curl http://localhost:3003/uptime\n")),Object(r.b)("p",null,"The previous command should give you a response in this format:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{"milliseconds": 123456}\n')),Object(r.b)("h2",{id:"endpoints"},"Endpoints"),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"/endpoints")," path is used to interact with endpoint schemas. Please import ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.getpostman.com/collections/de9443595ebafe610460"}),"our Postman Collection")," for a more visual interaction with our examples. ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.postman.com/features/mock-api/"}),"Postman")," is a useful tool for testing out your config files as request data is easy to manipulate and save within the app."),Object(r.b)("p",null,"The following HTTP methods are supported."),Object(r.b)("h3",{id:"post"},"POST"),Object(r.b)("p",null,"To create a new endpoint schema POST your JSON data to the ",Object(r.b)("inlineCode",{parentName:"p"},"/endpoints")," path."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),'curl --request POST \'http://localhost:3003/endpoints\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n    "name": "Endpoint Example",\n    "endpoint": {\n        "pattern": "/example",\n        "method": "GET"\n    },\n    "transformation": {\n        "input": "JSON",\n        "output": "JSON"\n    },\n    "inputMapping": {\n      "constants.example_constant":"hello"\n    },\n    "constants": {\n      "example_constant": "world!"\n    }\n}\'\n')),Object(r.b)("p",null,"Response body below."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n   "endpoint":{\n      "method":"GET",\n      "pattern":"/example"\n   },\n   "requests":{\n      "lookup":[],\n      "response":[]\n   },\n   "state":{\n      "config":{\n         "networkErrors":"no-filter",\n         "includeStatuses":[]\n      }\n   },\n   "_id":"60045c90cb78062ab5bdec85",\n   "name":"Endpoint Example",\n   "transformation":{\n      "input":"JSON",\n      "output":"JSON"\n   },\n   "inputMapping":{\n      "constants.example_constant":"hello"\n   },\n   "constants":{\n      "example_constant":"world!"\n   },\n   "createdAt":"2021-01-13T11:55:44.168Z",\n   "updatedAt":"2021-01-13T11:55:44.168Z",\n   "__v":0\n}\n')),Object(r.b)("p",null,"Take note of the uuid in the ",Object(r.b)("inlineCode",{parentName:"p"},"_id")," field. This Endpoint ID will be used for other API interactions."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Note: The response body will contain many ",Object(r.b)("strong",{parentName:"p"},"default configurations")," if they were not specified in the create message.")),Object(r.b)("h3",{id:"get"},"GET"),Object(r.b)("p",null,"A GET request will return Endpoint Configs. This can be useful to get an existing Endpoint's ID."),Object(r.b)("h4",{id:"get-all"},"GET all"),Object(r.b)("p",null,"This GET request will return a list of all existing Endpoints."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"curl 'http://localhost:3003/endpoints'\n")),Object(r.b)("p",null,"Response body below. Note that it is a list."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'[\n   {\n      "endpoint":{\n         "method":"GET",\n         "pattern":"/example"\n      },\n      "transformation":{\n         "input":"JSON",\n         "output":"JSON"\n      },\n      "requests":{\n         "lookup":[\n            \n         ],\n         "response":[\n            \n         ]\n      },\n      "state":{\n         "config":{\n            "networkErrors":"no-filter",\n            "includeStatuses":[\n               \n            ]\n         }\n      },\n      "_id":"60045c90cb78062ab5bdec85",\n      "name":"Endpoint Example",\n      "inputMapping":{\n         "constants.example_constant":"hello"\n      },\n      "constants":{\n         "example_constant":"world!"\n      },\n      "createdAt":"2021-01-17T15:49:36.877Z",\n      "updatedAt":"2021-01-17T15:49:36.877Z",\n      "__v":0\n   }\n]\n')),Object(r.b)("h4",{id:"get-one"},"GET one"),Object(r.b)("p",null,"For a specific Endpoint's details substitute its ID into the URL param below."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"curl 'http://localhost:3003/endpoints/{Endpoint_ID}'\n")),Object(r.b)("p",null,"Response body below."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n   "endpoint":{\n      "method":"GET",\n      "pattern":"/example"\n   },\n   "transformation":{\n      "input":"JSON",\n      "output":"JSON"\n   },\n   "requests":{\n      "lookup":[\n         \n      ],\n      "response":[\n         \n      ]\n   },\n   "state":{\n      "config":{\n         "networkErrors":"no-filter",\n         "includeStatuses":[\n            \n         ]\n      }\n   },\n   "_id":"60045c90cb78062ab5bdec85",\n   "name":"Endpoint Example",\n   "inputMapping":{\n      "constants.example_constant":"hello"\n   },\n   "constants":{\n      "example_constant":"world!"\n   },\n   "createdAt":"2021-01-17T15:49:36.877Z",\n   "updatedAt":"2021-01-17T15:49:36.877Z",\n   "__v":0\n}\n')),Object(r.b)("h3",{id:"put"},"PUT"),Object(r.b)("p",null,"The PUT request is used to update a specific Endpoint's config. In the example below we are adding a new constant and an inputMapping field.\nIn the URL substitute in the Endpoint ID into the URL Param."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),'curl --request PUT \'http://localhost:3003/endpoints/{Endpoint_ID}\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n    "name": "Endpoint Example",\n    "endpoint": {\n        "pattern": "/example",\n        "method": "GET"\n    },\n    "transformation": {\n        "input": "JSON",\n        "output": "JSON"\n    },\n    "inputMapping": {\n        "constants.example_constant": "hello",\n        "constants.new_constant": "foo"\n    },\n    "constants": {\n        "example_constant": "world!",\n        "new_constant": "bar"\n    }\n}\'\n')),Object(r.b)("p",null,"Response Body below."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n   "endpoint":{\n      "method":"GET",\n      "pattern":"/example"\n   },\n   "transformation":{\n      "input":"JSON",\n      "output":"JSON"\n   },\n   "requests":{\n      "lookup":[\n         \n      ],\n      "response":[\n         \n      ]\n   },\n   "state":{\n      "config":{\n         "networkErrors":"no-filter",\n         "includeStatuses":[\n            \n         ]\n      }\n   },\n   "_id":"60045c90cb78062ab5bdec85",\n   "name":"Endpoint Example",\n   "inputMapping":{\n      "constants.example_constant":"hello",\n      "constants.new_constant":"foo"\n   },\n   "constants":{\n      "example_constant":"world!",\n      "new_constant":"bar"\n   },\n   "createdAt":"2021-01-17T15:49:36.877Z",\n   "updatedAt":"2021-01-17T16:09:17.896Z",\n   "__v":0\n}\n')),Object(r.b)("h3",{id:"delete"},"DELETE"),Object(r.b)("p",null,"The delete request is used to completely remove an endpoint. Substitute in an Endpoint ID to delete it."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"curl --request DELETE 'http://localhost:3003/endpoints/{Endpoint_ID}'\n")),Object(r.b)("p",null,"Response body below."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{"message":"Endpoint with ID \'60045c90cb78062ab5bdec85\' deleted"}\n')))}l.isMDXComponent=!0},91:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return m}));var a=t(0),o=t.n(a);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function p(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?p(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=o.a.createContext({}),l=function(e){var n=o.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=l(e.components);return o.a.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},b=o.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(t),b=a,m=d["".concat(p,".").concat(b)]||d[b]||u[b]||r;return t?o.a.createElement(m,i(i({ref:n},c),{},{components:t})):o.a.createElement(m,i({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,p=new Array(r);p[0]=b;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,p[1]=i;for(var c=2;c<r;c++)p[c]=t[c];return o.a.createElement.apply(null,p)}return o.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);