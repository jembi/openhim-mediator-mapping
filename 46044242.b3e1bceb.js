(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{100:function(e,t,n){"use strict";var o=n(3),a=n(0),i=n.n(a);t.a=function({children:e,hidden:t,className:n}){return i.a.createElement("div",Object(o.a)({role:"tabpanel"},{hidden:t,className:n}),e)}},74:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return p})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return b}));var o=n(3),a=n(7),i=(n(0),n(91)),r=n(99),c=n(100),l={id:"content-negotiation",title:"Content Negotiation",sidebar_label:"Content Negotiation"},p={unversionedId:"features/content-negotiation",id:"features/content-negotiation",isDocsHomePage:!1,title:"Content Negotiation",description:"The Content Negotiation feature within each endpoints allows the implementer to define the Content-Type of the incoming request payload to ensure the correct formatted data is being sent, as well as to define the Content-Type of the outgoing response payload.",source:"@site/docs/features/content-negotiation.md",slug:"/features/content-negotiation",permalink:"/openhim-mediator-mapping/docs/features/content-negotiation",editUrl:"https://github.com/jembi/openhim-mediator-mapping/edit/master/docs/docs/features/content-negotiation.md",version:"current",sidebar_label:"Content Negotiation",sidebar:"someSidebar",previous:{title:"Sample Endpoint Schemas",permalink:"/openhim-mediator-mapping/docs/gettingStarted/samples"},next:{title:"Validation",permalink:"/openhim-mediator-mapping/docs/features/validation"}},s=[{value:"How does this work?",id:"how-does-this-work",children:[]},{value:"Content Negotiation in practice",id:"content-negotiation-in-practice",children:[]}],u={toc:s};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(o.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"The Content Negotiation feature within each endpoints allows the implementer to define the ",Object(i.b)("inlineCode",{parentName:"p"},"Content-Type")," of the incoming request payload to ensure the correct formatted data is being sent, as well as to define the ",Object(i.b)("inlineCode",{parentName:"p"},"Content-Type")," of the outgoing response payload."),Object(i.b)("p",null,"This features can be used completely on its own without having to execute any of the other features if you purely just want to convert a document from one format to another."),Object(i.b)("p",null,"Supported Content Types:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"JSON"),Object(i.b)("li",{parentName:"ul"},"XML")),Object(i.b)("h2",{id:"how-does-this-work"},"How does this work?"),Object(i.b)("p",null,"When creating a new ",Object(i.b)("inlineCode",{parentName:"p"},"endpoint")," you can supply a section called ",Object(i.b)("inlineCode",{parentName:"p"},"transformation")," to the root of the ",Object(i.b)("inlineCode",{parentName:"p"},"endpoint")," schema."),Object(i.b)("p",null,"This object will contain the ",Object(i.b)("inlineCode",{parentName:"p"},"Content-Type")," for both the ",Object(i.b)("inlineCode",{parentName:"p"},"input")," and ",Object(i.b)("inlineCode",{parentName:"p"},"output")," payloads"),Object(i.b)("h2",{id:"content-negotiation-in-practice"},"Content Negotiation in practice"),Object(i.b)("p",null,"The example is just to illustrate how to go about defining the payload ",Object(i.b)("inlineCode",{parentName:"p"},"Content-Type")," for both incoming and outgoing payloads for a specific ",Object(i.b)("inlineCode",{parentName:"p"},"endpoint"),"."),Object(i.b)("p",null,"The below Content Negotiation settings accepts an incoming payload in ",Object(i.b)("inlineCode",{parentName:"p"},"XML")," format and then converts it into ",Object(i.b)("inlineCode",{parentName:"p"},"JSON")," for the response payload"),Object(i.b)(r.a,{defaultValue:"endpoint",values:[{label:"Endpoint Schema",value:"endpoint"},{label:"Request",value:"request"}],mdxType:"Tabs"},Object(i.b)(c.a,{value:"endpoint",mdxType:"TabItem"},Object(i.b)("p",null,"Below is a basic example of the ",Object(i.b)("inlineCode",{parentName:"p"},"state")," object within the ",Object(i.b)("inlineCode",{parentName:"p"},"endpoint")," schema"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-json",metastring:"{6-9}","{6-9}":!0}),'{\n  "name": "A Sample Endpoint",\n  "endpoint": {\n    "pattern": "/sample-endpoint"\n  },\n  "transformation": {\n    "input": "XML",\n    "output": "JSON"\n  }\n}\n'))),Object(i.b)(c.a,{value:"request",mdxType:"TabItem"},Object(i.b)("p",null,"The sample ",Object(i.b)("inlineCode",{parentName:"p"},"transformation")," schema definition shows us how we go about converting the ",Object(i.b)("inlineCode",{parentName:"p"},"input")," and ",Object(i.b)("inlineCode",{parentName:"p"},"ouptut")," payloads of the ",Object(i.b)("inlineCode",{parentName:"p"},"endpoint")," request"),Object(i.b)("p",null,"Lets make use of a sample ",Object(i.b)("inlineCode",{parentName:"p"},"payload.xml")," document that will be sent to this endpoint to illustrate the transformation of the payload"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-xml"}),'<?xml version="1.0" encoding="UTF-8" ?>\n<root>\n  <uuid>e6c2e4fd-fd90-401c-8820-1abb9713944a</uuid>\n  <display>Sample S Patient</display>\n  <height>1.77</height>\n  <weight>91</weight>\n</root>\n')),Object(i.b)("p",null,"The sample POST request to this endpoint would look like the below:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-curl"}),'curl -X POST -d "@payload.xml" -H "Content-Type: application/xml" http://localhost:3003/sample-endpoint\n')))))}b.isMDXComponent=!0},90:function(e,t,n){"use strict";function o(e){var t,n,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=o(e[t]))&&(a&&(a+=" "),a+=n);else for(t in e)e[t]&&(a&&(a+=" "),a+=t);return a}t.a=function(){for(var e,t,n=0,a="";n<arguments.length;)(e=arguments[n++])&&(t=o(e))&&(a&&(a+=" "),a+=t);return a}},91:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var o=n(0),a=n.n(o);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),s=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,r=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=o,m=u["".concat(r,".").concat(d)]||u[d]||b[d]||i;return n?a.a.createElement(m,c(c({ref:t},p),{},{components:n})):a.a.createElement(m,c({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,r[1]=c;for(var p=2;p<i;p++)r[p]=n[p];return a.a.createElement.apply(null,r)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},94:function(e,t,n){"use strict";var o=n(0),a=n(95);t.a=function(){const e=Object(o.useContext)(a.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},95:function(e,t,n){"use strict";var o=n(0);const a=Object(o.createContext)(void 0);t.a=a},99:function(e,t,n){"use strict";var o=n(0),a=n.n(o),i=n(94),r=n(90),c=n(55),l=n.n(c);const p=37,s=39;t.a=function(e){const{lazy:t,block:n,defaultValue:c,values:u,groupId:b,className:d}=e,{tabGroupChoices:m,setTabGroupChoices:f}=Object(i.a)(),[h,O]=Object(o.useState)(c),g=o.Children.toArray(e.children);if(null!=b){const e=m[b];null!=e&&e!==h&&u.some((t=>t.value===e))&&O(e)}const j=e=>{O(e),null!=b&&f(b,e)},y=[];return a.a.createElement("div",null,a.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(r.a)("tabs",{"tabs--block":n},d)},u.map((({value:e,label:t})=>a.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":h===e,className:Object(r.a)("tabs__item",l.a.tabItem,{"tabs__item--active":h===e}),key:e,ref:e=>y.push(e),onKeyDown:e=>{((e,t,n)=>{switch(n.keyCode){case s:((e,t)=>{const n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()})(e,t);break;case p:((e,t)=>{const n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()})(e,t)}})(y,e.target,e)},onFocus:()=>j(e),onClick:()=>{j(e)}},t)))),t?Object(o.cloneElement)(g.filter((e=>e.props.value===h))[0],{className:"margin-vert--md"}):a.a.createElement("div",{className:"margin-vert--md"},g.map(((e,t)=>Object(o.cloneElement)(e,{key:t,hidden:e.props.value!==h})))))}}}]);