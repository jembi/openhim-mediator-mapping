"use strict";(self.webpackChunkmapping_mediator=self.webpackChunkmapping_mediator||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"someSidebar":[{"type":"category","collapsed":true,"collapsible":true,"label":"Getting Started","items":[{"type":"link","label":"Introduction","href":"/openhim-mediator-mapping/docs/gettingStarted/introduction","docId":"gettingStarted/introduction"},{"type":"link","label":"Quick Start","href":"/openhim-mediator-mapping/docs/gettingStarted/quick-start","docId":"gettingStarted/quick-start"},{"type":"link","label":"Setup","href":"/openhim-mediator-mapping/docs/gettingStarted/setup","docId":"gettingStarted/setup"},{"type":"link","label":"Endpoints","href":"/openhim-mediator-mapping/docs/gettingStarted/endpoints","docId":"gettingStarted/endpoints"},{"type":"link","label":"Mapping Mediator API","href":"/openhim-mediator-mapping/docs/gettingStarted/api","docId":"gettingStarted/api"},{"type":"link","label":"Sample Endpoint Schemas","href":"/openhim-mediator-mapping/docs/gettingStarted/samples","docId":"gettingStarted/samples"}]},{"type":"category","collapsed":true,"collapsible":true,"label":"Features","items":[{"type":"link","label":"Content Negotiation","href":"/openhim-mediator-mapping/docs/features/content-negotiation","docId":"features/content-negotiation"},{"type":"link","label":"Validation","href":"/openhim-mediator-mapping/docs/features/validation","docId":"features/validation"},{"type":"link","label":"Orchestrations","href":"/openhim-mediator-mapping/docs/features/orchestration","docId":"features/orchestration"},{"type":"link","label":"Kafka Integration","href":"/openhim-mediator-mapping/docs/features/kafka-integration","docId":"features/kafka-integration"},{"type":"link","label":"Transformation","href":"/openhim-mediator-mapping/docs/features/transformation","docId":"features/transformation"},{"type":"link","label":"Mapping","href":"/openhim-mediator-mapping/docs/features/mapping","docId":"features/mapping"},{"type":"link","label":"State Management","href":"/openhim-mediator-mapping/docs/features/state-management","docId":"features/state-management"}]}]},"docs":{"features/content-negotiation":{"id":"features/content-negotiation","title":"Content Negotiation","description":"The Content Negotiation feature within each endpoints allows the implementer to define the Content-Type of the incoming request payload to ensure the correct formatted data is being sent, as well as to define the Content-Type of the outgoing response payload.","sidebar":"someSidebar"},"features/kafka-integration":{"id":"features/kafka-integration","title":"Kafka Integration","description":"This mediator has the ability to consume and produce to kafka. The details for accessing the kafka instance can be specified in the config file or via environment variables. Below is an example of the kafka config","sidebar":"someSidebar"},"features/mapping":{"id":"features/mapping","title":"Mapping","description":"For the mapping, a inputMapping section in the Endpoint schema has to be added and this defines how the incoming data will be used to build up a new object with the desired structure.","sidebar":"someSidebar"},"features/orchestration":{"id":"features/orchestration","title":"Orchestrations","description":"An orchestration object is created for actions performed on the input data. These orchestrations can be seen on the openhim console if the request is sent to the mapping mediator via the openhim core.","sidebar":"someSidebar"},"features/state-management":{"id":"features/state-management","title":"State Management","description":"The State Management features within each endpoints allows the implementer to define a set of values to extract from the available data points within each endpoint request","sidebar":"someSidebar"},"features/transformation":{"id":"features/transformation","title":"Transformation","description":"The transformation section of the mapping mediator is useful for doing complex data manipulations within one endpoint call before mapping the data.","sidebar":"someSidebar"},"features/validation":{"id":"features/validation","title":"Validation","description":"The Validation feature within each endpoints allows the implementer to define a definition of validation rules that the incoming payload needs to adhere to for it to be considered a valid payload.","sidebar":"someSidebar"},"gettingStarted/api":{"id":"gettingStarted/api","title":"Mapping Mediator API","description":"There are two default reserved API paths within the Mapping Mediator. The first is the /uptime path and the second is the /endpoints path.","sidebar":"someSidebar"},"gettingStarted/endpoints":{"id":"gettingStarted/endpoints","title":"Endpoints","description":"Endpoint Configuration","sidebar":"someSidebar"},"gettingStarted/introduction":{"id":"gettingStarted/introduction","title":"Introduction","description":"The OpenHIM Mediator Mapping is a generic mapping tool that can help facilitate many common data exchange needs.","sidebar":"someSidebar"},"gettingStarted/quick-start":{"id":"gettingStarted/quick-start","title":"Quick Start","description":"This quick start guide should get you up and running in just a few minutes (without the OpenHIM Core)","sidebar":"someSidebar"},"gettingStarted/samples":{"id":"gettingStarted/samples","title":"Sample Endpoint Schemas","description":"Within the Mapping Mediator repository we have created a set of sample Endpoint Schemas to help new users test out some of the Mapping Mediators features.","sidebar":"someSidebar"},"gettingStarted/setup":{"id":"gettingStarted/setup","title":"Setup","description":"The Mapping mediator can be setup within a NodeJS environment using Yarn or with Docker. In either case, it depends on MongoDB setup as a replica set. The mediator is configured using environment variables.","sidebar":"someSidebar"}}}')}}]);