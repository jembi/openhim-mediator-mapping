"use strict";(self.webpackChunkmapping_mediator=self.webpackChunkmapping_mediator||[]).push([[760],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=o.createContext({}),p=function(e){var t=o.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return o.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,f=d["".concat(u,".").concat(m)]||d[m]||c[m]||r;return n?o.createElement(f,i(i({ref:t},s),{},{components:n})):o.createElement(f,i({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8215:function(e,t,n){var o=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,a=e.className;return o.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},6396:function(e,t,n){n.d(t,{Z:function(){return d}});var o=n(3117),a=n(7294),r=n(2389),i=n(9443);var l=function(){var e=(0,a.useContext)(i.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},u=n(6681),p=n(6010),s="tabItem_1uMI";function c(e){var t,n,r,i=e.lazy,c=e.block,d=e.defaultValue,m=e.values,f=e.groupId,h=e.className,v=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=m?m:v.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),b=(0,u.lx)(g,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===d?d:null!=(t=null!=d?d:null==(n=v.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(r=v[0])?void 0:r.props.value;if(null!==y&&!g.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var k=l(),w=k.tabGroupChoices,N=k.setTabGroupChoices,C=(0,a.useState)(y),T=C[0],O=C[1],x=[],E=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var j=w[f];null!=j&&j!==T&&g.some((function(e){return e.value===j}))&&O(j)}var S=function(e){var t=e.currentTarget,n=x.indexOf(t),o=g[n].value;o!==T&&(E(t),O(o),null!=f&&N(f,o))},P=function(e){var t,n=null;switch(e.key){case"ArrowRight":var o=x.indexOf(e.currentTarget)+1;n=x[o]||x[0];break;case"ArrowLeft":var a=x.indexOf(e.currentTarget)-1;n=x[a]||x[x.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,p.Z)("tabs",{"tabs--block":c},h)},g.map((function(e){var t=e.value,n=e.label,r=e.attributes;return a.createElement("li",(0,o.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:function(e){return x.push(e)},onKeyDown:P,onFocus:S,onClick:S},r,{className:(0,p.Z)("tabs__item",s,null==r?void 0:r.className,{"tabs__item--active":T===t})}),null!=n?n:t)}))),i?(0,a.cloneElement)(v.filter((function(e){return e.props.value===T}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==T})}))))}function d(e){var t=(0,r.Z)();return a.createElement(c,(0,o.Z)({key:String(t)},e))}},7435:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return d},default:function(){return f}});var o=n(3117),a=n(102),r=(n(7294),n(3905)),i=n(6396),l=n(8215),u=["components"],p={id:"content-negotiation",title:"Content Negotiation",sidebar_label:"Content Negotiation"},s=void 0,c={unversionedId:"features/content-negotiation",id:"features/content-negotiation",title:"Content Negotiation",description:"The Content Negotiation feature within each endpoints allows the implementer to define the Content-Type of the incoming request payload to ensure the correct formatted data is being sent, as well as to define the Content-Type of the outgoing response payload.",source:"@site/docs/features/content-negotiation.md",sourceDirName:"features",slug:"/features/content-negotiation",permalink:"/openhim-mediator-mapping/docs/features/content-negotiation",editUrl:"https://github.com/jembi/openhim-mediator-mapping/edit/master/docs/docs/features/content-negotiation.md",tags:[],version:"current",frontMatter:{id:"content-negotiation",title:"Content Negotiation",sidebar_label:"Content Negotiation"},sidebar:"someSidebar",previous:{title:"Sample Endpoint Schemas",permalink:"/openhim-mediator-mapping/docs/gettingStarted/samples"},next:{title:"Validation",permalink:"/openhim-mediator-mapping/docs/features/validation"}},d=[{value:"How does this work?",id:"how-does-this-work",children:[],level:2},{value:"Content Negotiation in practice",id:"content-negotiation-in-practice",children:[],level:2}],m={toc:d};function f(e){var t=e.components,n=(0,a.Z)(e,u);return(0,r.kt)("wrapper",(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The Content Negotiation feature within each endpoints allows the implementer to define the ",(0,r.kt)("inlineCode",{parentName:"p"},"Content-Type")," of the incoming request payload to ensure the correct formatted data is being sent, as well as to define the ",(0,r.kt)("inlineCode",{parentName:"p"},"Content-Type")," of the outgoing response payload."),(0,r.kt)("p",null,"This features can be used completely on its own without having to execute any of the other features if you purely just want to convert a document from one format to another."),(0,r.kt)("p",null,"Supported Content Types:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"JSON"),(0,r.kt)("li",{parentName:"ul"},"XML")),(0,r.kt)("h2",{id:"how-does-this-work"},"How does this work?"),(0,r.kt)("p",null,"When creating a new ",(0,r.kt)("inlineCode",{parentName:"p"},"endpoint")," you can supply a section called ",(0,r.kt)("inlineCode",{parentName:"p"},"transformation")," to the root of the ",(0,r.kt)("inlineCode",{parentName:"p"},"endpoint")," schema."),(0,r.kt)("p",null,"This object will contain the ",(0,r.kt)("inlineCode",{parentName:"p"},"Content-Type")," for both the ",(0,r.kt)("inlineCode",{parentName:"p"},"input")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"output")," payloads"),(0,r.kt)("h2",{id:"content-negotiation-in-practice"},"Content Negotiation in practice"),(0,r.kt)("p",null,"The example is just to illustrate how to go about defining the payload ",(0,r.kt)("inlineCode",{parentName:"p"},"Content-Type")," for both incoming and outgoing payloads for a specific ",(0,r.kt)("inlineCode",{parentName:"p"},"endpoint"),"."),(0,r.kt)("p",null,"The below Content Negotiation settings accepts an incoming payload in ",(0,r.kt)("inlineCode",{parentName:"p"},"XML")," format and then converts it into ",(0,r.kt)("inlineCode",{parentName:"p"},"JSON")," for the response payload"),(0,r.kt)(i.Z,{defaultValue:"endpoint",values:[{label:"Endpoint Schema",value:"endpoint"},{label:"Request",value:"request"}],mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"endpoint",mdxType:"TabItem"},(0,r.kt)("p",null,"Below is a basic example of the ",(0,r.kt)("inlineCode",{parentName:"p"},"state")," object within the ",(0,r.kt)("inlineCode",{parentName:"p"},"endpoint")," schema"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:"{6-9}","{6-9}":!0},'{\n  "name": "A Sample Endpoint",\n  "endpoint": {\n    "pattern": "/sample-endpoint"\n  },\n  "transformation": {\n    "input": "XML",\n    "output": "JSON"\n  }\n}\n'))),(0,r.kt)(l.Z,{value:"request",mdxType:"TabItem"},(0,r.kt)("p",null,"The sample ",(0,r.kt)("inlineCode",{parentName:"p"},"transformation")," schema definition shows us how we go about converting the ",(0,r.kt)("inlineCode",{parentName:"p"},"input")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"ouptut")," payloads of the ",(0,r.kt)("inlineCode",{parentName:"p"},"endpoint")," request"),(0,r.kt)("p",null,"Lets make use of a sample ",(0,r.kt)("inlineCode",{parentName:"p"},"payload.xml")," document that will be sent to this endpoint to illustrate the transformation of the payload"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="UTF-8" ?>\n<root>\n  <uuid>e6c2e4fd-fd90-401c-8820-1abb9713944a</uuid>\n  <display>Sample S Patient</display>\n  <height>1.77</height>\n  <weight>91</weight>\n</root>\n')),(0,r.kt)("p",null,"The sample POST request to this endpoint would look like the below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-curl"},'curl -X POST -d "@payload.xml" -H "Content-Type: application/xml" http://localhost:3003/sample-endpoint\n')))))}f.isMDXComponent=!0}}]);